name: release

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 20.3.1

      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: 1.20.6

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Building static assets
        run: (cd web/client && yarn install --immutable && yarn build)

      - name: Install tools
        run: make install-tools

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4.4.0
        with:
          version: v1.10.2
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
  docker:
    runs-on: ubuntu-latest
    if: contains(toJson(github.event.commits), '[action]') == false
    steps:
      - uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: sundowndev/phoneinfoga:latest,sundowndev/phoneinfoga:v2,sundowndev/phoneinfoga:stable,sundowndev/phoneinfoga:${{ github.ref_name }}
          platforms: linux/amd64 # ,linux/arm/v7,linux/arm64 - TODO(sundowndev): enable arm support back
  publish-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install mkdocs==1.3.0 mkdocs-material==8.3.9 mkdocs-minify-plugin==0.5.0 mkdocs-redirects==1.1.0

      - name: Deploy
        run: |
          git remote set-url origin https://${{ secrets.GITHUB_USER }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ secrets.GITHUB_USER }}/phoneinfoga.git
          git config --global user.email "${{ secrets.GITHUB_USER }}@users.noreply.github.com"
          git config --global user.name "${{ secrets.GITHUB_USER }}"
          mkdocs gh-deploy --force
